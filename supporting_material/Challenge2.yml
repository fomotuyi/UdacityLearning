Description:
  This template will deploy VPC, Internet Gateway, Two subnet(Private and Public), NAT Gateway, 
  Routing Table and create stack to run the IAC.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to all the resource names
    Type: String

  VpcCIDR: 
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16

  PrivateSubnetCIDR: 
    Description: Please enter the IP range (CIDR notation) for this Private Subnet
    Type: String
    Default: 10.0.2.0/24

  PublicSubnetCIDR: 
    Description: Please enter the IP range (CIDR notation) for this Public Subnet
    Type: String
    Default: 10.0.1.0/16

Resources:
  FiyinVPC: 
    Type: AWS::EC2::VPC
    Properties:
        CidrBlock: !Ref VpcCIDR
        EnableDnsHostnames: true
        Tags: 
            - Key: Name 
              Value: !Ref EnvironmentName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
        Tags:
            - Key: Name
              Value: !Ref EnvironmentName
        
  InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
          InternetGatewayId: !Ref InternetGateway
          VpcId: !Ref FiyinVPC
  PrivateSubnet1: 
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref FiyinVPC
          AvailabilityZone: !Select [ 0, !GetAZs '' ]
          CidrBlock: !Ref PrivateSubnetCIDR
          MapPublicIpOnLaunch: false
          Tags: 
              - Key: Name 
                Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
  PublicSubnet1: 
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref FiyinVPC
          AvailabilityZone: !Select [ 1, !GetAZs '' ]
          CidrBlock: !Ref PublicSubnetCIDR
          MapPublicIpOnLaunch: true
          Tags: 
              - Key: Name 
                Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
  NatGatewayEIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties: 
          Domain: FiyinVPC
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
          Fn::GetAtt:
          - NatGatewayEIP
          - AllocationId
        SubnetId: !Ref PublicSubnet1
        Tags:
        - Key: Name
          Value: "NAT to be used by servers in the private subnet"
  PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref FiyinVPC
          Tags: 
              - Key: Name 
                Value: !Sub ${EnvironmentName} Public Route Table
  PrivateRouteTable:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref FiyinVPC
          Tags: 
              - Key: Name 
                Value: !Sub ${EnvironmentName} Private Route Table
  PublicRoute: 
          Type: AWS::EC2::Route
          DependsOn: InternetGatewayAttachment
          Properties: 
              RouteTableId: !Ref PublicRouteTable
              DestinationCidrBlock: 0.0.0.0/0
              GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref PublicSubnet1
  PrivateRoute: 
      Type: AWS::EC2::Route
      Properties: 
        RouteTableId: !Ref PrivateRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway1
  PrivateSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable
          SubnetId: 
            Ref: PrivateSubnet1
Outputs:
  VPC:
    Description: The ID of the VPC
    Value: !Ref FiyinVPC
    Export:
     Name: !Sub ${EnvironmentName}-VPCID
  PrivateSubnet1:
          Description: A reference to the private subnet in the 1st Availability Zone
          Value: !Ref PrivateSubnet1
          Export:
            Name: !Sub ${EnvironmentName}-PRI1-SN